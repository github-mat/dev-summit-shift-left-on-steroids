name: Deploy from PR
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

concurrency:
  group: terraform-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: false

env:
  CONTAINER_REGISTRY: europe-west3-docker.pkg.dev

jobs:
  ci:
    name: Run CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install UV
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          cd dev-summit
          uv sync --extra dev

      - name: Check code formatting with Black
        run: |
          cd dev-summit
          uv run black --config pyproject.toml --check src/

      - name: Check import sorting with isort
        run: |
          cd dev-summit
          uv run isort --settings-file=pyproject.toml --check-only src/

      - name: Run linting with Pylint
        run: |
          cd dev-summit
          uv run pylint --rcfile=pyproject.toml src/

  build-static-html:
    name: Build static HTML and commit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set git to use SSH
        run: git remote set-url origin git@github.com:${{ github.repository }}.git

      - name: Install UV
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          cd dev-summit
          uv sync

      - name: Generate static HTML
        run: |
          cd dev-summit
          uv run python src/generate_static.py

      - name: Commit and push static HTML
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs
          git commit -m "Update static HTML [skip ci]" || echo "No changes to commit"
          git push

  publish-docker-image:
    name: Publish Docker Images
    needs: ci

    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: braided-flow-434519-s1
          service_account: github-actions@braided-flow-434519-s1.iam.gserviceaccount.com
          workload_identity_provider: projects/542761338020/locations/global/workloadIdentityPools/github-actions-identity-pool/providers/github-actions-provider

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 363.0.0"

      - name: Configure Docker
        run: |
          gcloud info
          gcloud auth configure-docker ${{ env.CONTAINER_REGISTRY }}

      - name: Build and Publish Docker Image
        working-directory: dev-summit
        run: |
          set -e
          IMAGE_TAG=$(echo "${{ github.head_ref || github.ref_name }}" | sed 's/[^a-zA-Z0-9._-]/-/g' | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${{ env.CONTAINER_REGISTRY }}/braided-flow-434519-s1/my-coworker-docker-repo/dev-summit:${IMAGE_TAG}"
          docker build --pull -f Dockerfile -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"

  apply-terraform:
    name: Apply Terraform
    needs: publish-docker-image

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: braided-flow-434519-s1
          service_account: github-actions@braided-flow-434519-s1.iam.gserviceaccount.com
          workload_identity_provider: projects/542761338020/locations/global/workloadIdentityPools/github-actions-identity-pool/providers/github-actions-provider

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 363.0.0"

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        working-directory: terraform/deployment
        run: |
          terraform init
          terraform workspace select -or-create $(echo "${{ github.head_ref || github.ref_name }}" | sed 's/[^a-zA-Z0-9._-]/-/g' | tr '[:upper:]' '[:lower:]')

      - name: Terraform format
        working-directory: terraform/deployment
        run: |
          terraform fmt -check

      - name: Terraform validate
        working-directory: terraform/deployment
        run: |
          terraform validate

      - name: Terraform apply
        working-directory: terraform/deployment
        run: |
          terraform apply -auto-approve
